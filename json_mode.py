import openai  # 1.1.1
import os

system = """
# 命令書
あなたはウェブエンジニアです。要件定義書が与えられるので、下記の制約条件に従って必要なWeb APIの設計書を出力してください。

# 制約条件
- [要件定義書]に準拠すること
- [API設計書形式]に合わせたJSONで出力すること
- GET/POST/PUT/DELETE、それぞれ別のAPIとして扱うこと

# API設計書形式の例

```json
{
    apis: [
        {
            name: "ユーザー登録",
            description: "ユーザーを登録する",
            method: "POST",
            path: "/users",
            request: ユーザー情報,
            response: ユーザーID
        }
    ]    
}
```

"""
message = """
# 要件定義書

ToDoアプリの設計書（概略版）

1. 概要
この文書は、シンプルなToDoアプリの基本的な設計を記述します。アプリは、ユーザーがタスクを簡単に追加、管理、完了としてマークできる機能を提供することを目的とします。

2. 機能要件
- **タスクの追加**: ユーザーは新しいタスクを追加できる。
- **タスクの一覧表示**: 追加されたタスクが一覧で表示される。
- **タスクの編集**: ユーザーは既存のタスクを編集できる。
- **タスクの削除**: ユーザーはタスクを削除できる。
- **タスクの完了**: ユーザーはタスクを完了としてマークできる。
- **フィルタリング**: 完了したタスクと未完了のタスクを分けて表示できる。

3. 非機能要件
- **使いやすさ**: インターフェースは直感的で簡単に使えるものでなければならない。
- **パフォーマンス**: タスクの追加、編集、削除は迅速に行われる。
- **拡張性**: 将来的な機能追加に対応できる設計であること。

4. システムアーキテクチャ
- **クライアント**: スマートフォンやウェブブラウザで動作するフロントエンド。
- **サーバー**: タスクのデータを保持し、クライアントとのやり取りを行うバックエンドサーバー。

5. 技術スタック
- フロントエンド: ReactまたはVue.js
- バックエンド: Node.js + Express
- データベース: MongoDBまたはPostgreSQL

6. ユーザーインターフェース
- **タスク一覧画面**: タスクがリストアップされる。
- **タスク追加モーダル**: タスクを追加するためのポップアップモーダル。
- **タスク編集インターフェース**: 既存タスクを編集するためのインターフェース。
- **フィルタリングオプション**: 完了/未完了を切り替えるためのUIコンポーネント。

7. データモデル
- **タスク**: 
  - ID
  - タイトル
  - 説明
  - 完了状態
  - 作成日時
  - 更新日時

8. セキュリティ
- **認証**: ユーザーはアカウントを作成し、ログインすることでタスクを管理できる。
- **データ保護**: HTTPSを使用してデータを暗号化し、データベースは定期的にバックアップする。

9. 開発とデプロイ
- 開発にはGitを使用し、ソースコードはGitHubに保管する。
- デプロイにはHerokuまたはAWSを使用する。

10. テスト
- 単体テスト: 各機能に対して単体テストを行う。
- 統合テスト: 全体のワークフローが正常に機能するかのテストを行う。
- ユーザーアクセプタンステスト: 実際のユーザーがテストを行い、使用感を評価する

"""
client = openai.OpenAI(api_key=os.environ['OPENAI_API_KEY'])
response = client.chat.completions.create(
    messages=[
        {
            "role": "system",
            "content": system
        },
        {
            "role": "user",
            "content": message
        }
    ],
    model="gpt-3.5-turbo-1106",
)
print(response.choices[0].message.content)